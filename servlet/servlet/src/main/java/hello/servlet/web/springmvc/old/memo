동작순서
1.  핸들러조회: 핸들러 매핑을 통해 요청 URL에 매핑된 핸들러(컨트롤러)를 조회한다.
2.  핸들러 어댑터 조회: 핸들러를 실행할 수 있는 핸들러 어댑터를 조회한다.
3.  핸들러 어댑터 실행: 핸들러 어댑터를 실행한다.
4.  핸들러실행: 핸들러 어댑터가 실제 핸들러를 실행한다.
5.  ModelAndView 반환: 핸들러 어댑터는 핸들러가 반환하는 정보를 ModelAndView로 변환해서 반환한다.
6.  viewResolver 호출: 뷰 리졸버를 찾고 실행한다.
    JSP의 경우: InternalResourceViewResolver가 자동등록되고, 사용된다.
7.  View 반환: 뷰 리졸버는 뷰의 논리 이름을 물리이름으로 바꾸고, 렌더링 역할을 담당하는 뷰 객체를 반환한다.
    JSP의 경우 InternalResourceView(JstlView)를 반환하는데, 내부에 forward() 로직이있다.
8.  뷰 렌더링: 뷰를 통해서 뷰를 렌더링 한다.


주요 인터페이스 목록

핸들러매핑: org.springframework.web.servlet.HandlerMapping
    * 0 = RequestMappingHandlerMapping   : 애노테이션 기반의 컨트롤러인 @RequestMapping에서 사용
    * 1 = BeanNameUrlHandlerMapping      : 스프링 빈의 이름으로 핸들러를 찾는다.

핸들러어댑터: org.springframework.web.servlet.HandlerAdapter
    * 0 = RequestMappingHandlerAdapter   : 애노테이션 기반의 컨트롤러인 @RequestMapping에서 사용
    * 1 = HttpRequestHandlerAdapter      : HttpRequestHandler 처리
    * 2 = SimpleControllerHandlerAdapter : Controller 인터페이스(애노테이션X, 과거에 사용) 처리

뷰리졸버: org.springframework.web.servlet.ViewResolver
    * 1 = BeanNameViewResolver         : 빈 이름으로 뷰를 찾아서 반환한다. (예: 엑셀 파일 생성 기능에 사용)
    * 2 = InternalResourceViewResolver : JSP를 처리할 수 있는 뷰를 반환한다.

뷰: org.springframework.web.servlet.View

@RequestMapping
- RequestMappingHandlerMapping
- RequestMappingHandlerAdapter


